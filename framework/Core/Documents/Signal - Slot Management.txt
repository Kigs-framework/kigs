
									Signal Slot Management
									User Manual
									Version 1.0 - 03 17 2017

									
1] Introduction

	runtime only (not compile time) signal / slot management. 
	
2] C++ syntax

	A slot is a "classic" CoreModifiable maMethod 

	Signals does not need to be defined 

	Connect a signal to a slot :
	
	KigsCore::Connect(instancea, "testSignal", instanceb, "slotMethod");
	
	or

	KigsCore::Connect(instancea, LABEL_TO_ID(testSignal), instanceb, LABEL_TO_ID(slotMethod));
	
	Emit a signal with this == instancea:
	
	
	kstl::vector<CoreModifiableAttribute*> params;
	void* privateParams;
	Emit("testSignal", params, privateParams);
	
	or 
	
	Emit(LABEL_TO_ID(testSignal), params, privateParams);
	
	or 
	
	SimpleEmit("testSignal",...);
	
	or 
	
	SimpleEmit(LABEL_TO_ID(testSignal),...);
	
	Disconnect a signal connected to a slot :
	
	KigsCore::Disconnect(instancea, "testSignal", instanceb, "slotMethod");
	
	or

	KigsCore::Disconnect(instancea, LABEL_TO_ID(testSignal), instanceb, LABEL_TO_ID(slotMethod));
	
	
	Of course one signal can be connected to several slots and one slot can be connected to several signals
	
3] XML syntax

	connection can be imported using xml with this syntax :
	
	<Connection Signal="testSignal" InstanceA = "DataDrivenBaseApplication:FSMtest" Slot="slotMethod" InstanceB="this"/>
	
	or using short syntax : 
	
	<Connect Si="testSignal" IA = "DataDrivenBaseApplication:FSMtest" Sl="slotMethod" IB="this"/>
	
	instance A and instance B are retreive using "this" or "self" if we want the signal or slot to be connected to current instance, or using "type:name" syntax or using path syntax "../../InstanceName1/InstanceName2
	
	
